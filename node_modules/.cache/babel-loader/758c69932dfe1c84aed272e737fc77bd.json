{"ast":null,"code":"var _jsxFileName = \"/home/karol/api-test/src/pages/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport Header from '../../components/Menu';\nimport { connect } from 'react-redux';\nimport { list } from '../../redux/ListReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ListCard } from './styles';\nimport { CenterFocusStrong } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: '15rem',\n    display: 'inline-block',\n    verticalAlign: 'text-top',\n    margin: '0 auto'\n  },\n  media: {\n    aspectRatio: 1\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nfunction Home(props) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  React.useEffect(() => {\n    props.list();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListCard, {\n      children: props.lista ? props.lista.map(lista => /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            \"aria-label\": \"recipe\",\n            className: classes.avatar,\n            children: \"R\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this),\n          action: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"settings\",\n            children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this),\n          title: \"Shrimp and Chorizo Paella\",\n          subheader: \"September 14, 2016\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: lista.image_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: lista.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: lista.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"Vp4IDa/0HtXUw7FqqMRSnVwkSSI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => ({\n  lista: state.list.list\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  list\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/karol/api-test/src/pages/Home/index.js"],"names":["React","bindActionCreators","Header","connect","list","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","ListCard","CenterFocusStrong","useStyles","theme","root","maxWidth","display","verticalAlign","margin","media","aspectRatio","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","Home","props","classes","expanded","setExpanded","useState","useEffect","lista","map","image_url","name","description","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bindActionCreators } from 'redux'\nimport Header from '../../components/Menu';\nimport { connect } from 'react-redux'\nimport { list } from '../../redux/ListReducer'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ListCard } from './styles';\nimport { CenterFocusStrong } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '15rem',\n    display: 'inline-block',\n    verticalAlign: 'text-top',\n    margin: '0 auto'\n  },\n  media: {\n    aspectRatio: 1\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction Home(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n\n  React.useEffect(() => {\n    props.list();\n  }, [])\n  return (\n    <>\n      <Header />\n      <ListCard>\n        {\n          props.lista ?\n            props.lista.map(lista => (\n\n              <Card className={classes.root}>\n                <CardHeader\n                  avatar={\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                      R\n                    </Avatar>\n                  }\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title=\"Shrimp and Chorizo Paella\"\n                  subheader=\"September 14, 2016\"\n                />\n                <CardMedia\n                  className={classes.media}\n                  image={lista.image_url}\n                />\n                <CardContent>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {lista.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {lista.description}\n                  </Typography>\n                </CardContent>\n              </Card>\n\n\n            )) : ''}\n      </ListCard>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  lista: state.list.list,\n\n})\n\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ list }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}