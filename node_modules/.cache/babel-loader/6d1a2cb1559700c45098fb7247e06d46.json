{"ast":null,"code":"var _jsxFileName = \"/home/karol/api-test/src/pages/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport Header from '../../components/Menu';\nimport { connect } from 'react-redux';\nimport { list } from '../../redux/ListReducer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ListCard, Desc } from './styles';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: '15rem',\n    display: 'inline-block',\n    verticalAlign: 'text-top'\n  },\n  media: {\n    aspectRatio: 1\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\n\nfunction Home(props) {\n  _s();\n\n  const classes = useStyles();\n  React.useEffect(() => {\n    props.list();\n  }, []);\n  const [title, setTitle] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListCard, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        style: {\n          margin: '0 auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-5\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Digite o titulo para buscar\",\n              defaultValue: \"\",\n              onChange: event => {\n                setTitle(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), props.lista ? props.lista.filter(val => {\n            if (title === \"\") {\n              return val;\n            } else if (val.name.toLowerCase().includes(title.toLowerCase())) {\n              return val;\n            }\n          }).map(lista => /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.root,\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              action: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"settings\",\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: lista.image_url,\n              style: {\n                height: 100\n              },\n              alt: lista.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Desc, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: lista.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Desc, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: lista.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"7kAR7hEWFHyWeMhdR+WY4aYlfEk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => ({\n  lista: state.list.list\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  list\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/karol/api-test/src/pages/Home/index.js"],"names":["React","useState","bindActionCreators","Header","connect","list","makeStyles","Card","CardHeader","CardContent","IconButton","MoreVertIcon","ListCard","Desc","TextField","useStyles","theme","root","maxWidth","display","verticalAlign","media","aspectRatio","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Home","props","classes","useEffect","title","setTitle","margin","event","target","value","lista","filter","val","name","toLowerCase","includes","map","image_url","height","nome","description","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { bindActionCreators } from 'redux'\nimport Header from '../../components/Menu';\nimport { connect } from 'react-redux'\nimport { list } from '../../redux/ListReducer'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { ListCard, Desc } from './styles';\nimport TextField from '@material-ui/core/TextField';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '15rem',\n    display: 'inline-block',\n    verticalAlign: 'text-top',\n  },\n  media: {\n    aspectRatio: 1\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}));\n\nfunction Home(props) {\n  const classes = useStyles();\n\n\n  React.useEffect(() => {\n    props.list();\n  }, [])\n\n  const [title, setTitle] = useState('');\n\n  return (\n    <>\n      <Header />\n      <ListCard>\n        <form className={classes.root} noValidate autoComplete=\"off\" style={{ margin: '0 auto' }}>\n          <div>\n            <div className=\"mb-5\">\n              <TextField\n                label=\"Digite o titulo para buscar\" defaultValue=\"\"\n                onChange={event => { setTitle(event.target.value) }}\n              />\n            </div>\n            {\n              props.lista ?\n                props.lista.filter((val) => {\n                  if (title === \"\") {\n                    return val\n                  } else if (val.name.toLowerCase().includes(title.toLowerCase())) {\n                    return val\n                  }\n                }).map(lista => (\n\n                  <Card className={classes.root}>\n                    <CardHeader\n                      action={\n                        <IconButton aria-label=\"settings\">\n                          <MoreVertIcon />\n                        </IconButton>\n                      }\n                    />\n                    <img src={lista.image_url}\n                      style={{ height: 100 }}\n                      alt={lista.nome}\n                    />\n                    <CardContent>\n                      <Desc variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {lista.name}\n                      </Desc>\n                      <Desc variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {lista.description}\n                      </Desc>\n                    </CardContent>\n                  </Card>\n\n\n                )) : ''}\n          </div>\n        </form>\n      </ListCard>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  lista: state.list.list,\n\n})\n\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ list }, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}